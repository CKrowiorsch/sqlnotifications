<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ConstructorTester</name>
    </assembly>
    <members>
        <member name="T:ConstructorTester.ArgumentNullTest">
            <summary>
            Checks classes if they throw <c>ArgumentNullException</c>s for their constructor arguments when they are null.
            </summary>
        </member>
        <member name="M:ConstructorTester.ArgumentNullTest.Execute(System.String,System.String,System.IO.SearchOption)">
            <summary>
            Tests all classes specified by the path and searchPattern.
            </summary>
            <param name="path">The directory to search.</param>
            <param name="searchPattern">The search string to match against the names of directories in path.</param>
            <param name="searchOption">One of the values of the SearchOption enumeration that specifies whether the search operation should include only the current directory or should include all subdirectories.The default value is TopDirectoryOnly.</param> 
        </member>
        <member name="M:ConstructorTester.ArgumentNullTest.Execute(System.Reflection.Assembly)">
            <summary>
            Tests all classes in an assembly and all constructors within these classes
            if all parameters are checked for null.
            </summary>
            <param name="assemblyUnderTest"><c>Assembly</c> to check.</param>
        </member>
        <member name="M:ConstructorTester.ArgumentNullTest.Execute(System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
            Tests all constructors of the given <c>Type</c>s if all parameters are checked for null.
            </summary>
            <param name="classesUnderTest"><c>Type</c>s to check.</param>
        </member>
        <member name="M:ConstructorTester.ArgumentNullTest.Execute(System.Type)">
            <summary>
            Tests all constructors of the given <c>Type</c> if all parameters are checked for null.
            </summary>
            <param name="classUnderTest"><c>Type</c> to check.</param>
        </member>
        <member name="M:ConstructorTester.ArgumentNullTest.Register``2">
            <summary>
            Registers a concrete type to be used for an abstract type or interface.
            </summary>
            <typeparam name="TBase">The abstract type or interface to be substituted.</typeparam>
            <typeparam name="TImplementation">The concrete type which should be used for <c>TBase</c>.</typeparam>
        </member>
        <member name="M:ConstructorTester.ArgumentNullTest.Register``1(``0)">
            <summary>
            Registers a concrete object to be used for an abstract type or interface.
            </summary>
            <typeparam name="T">The abstract type or interface to be substituted.</typeparam>
            <param name="implementation">The concrete object which should be used for <c>T</c>.</param>
        </member>
        <member name="M:ConstructorTester.ArgumentNullTest.Reset">
            <summary>
            Empties all registrations made via <c>Register</c> and resets the types not to test.
            </summary>
        </member>
        <member name="M:ConstructorTester.ArgumentNullTest.Exclude(System.Type,System.String)">
            <summary>
            Exclude given type in all the tests.
            </summary>
            <param name="type">Type to leave out for testing.</param>
            <param name="reason">Give a reason why not to test this type.</param>
        </member>
        <member name="M:ConstructorTester.ArgumentNullTest.UseFollowingConstructorParameters``1(System.Object[])">
            <summary>
            Use given parameters for the constructor of the given type.
            </summary>
            <typeparam name="T">The type to use the parameters for.</typeparam>
            <param name="parameters">The parameters to use for the given type.</param>
        </member>
        <member name="P:ConstructorTester.ArgumentNullTest.TestNullables">
            <summary>
            If set to <c>true</c>, <c>Nullable&lt;T&gt;</c> should also be checked for not null.
            </summary>
        </member>
        <member name="P:ConstructorTester.ArgumentNullTest.TestInternals">
            <summary>
            If set to <c>true</c>, internal constructors are tested also
            (please make sure, ConstructorTester has access to internal classes via the InternalsVisibleTo-attribute).
            </summary>
        </member>
    </members>
</doc>
